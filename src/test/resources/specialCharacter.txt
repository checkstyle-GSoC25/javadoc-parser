'- javadoc
   |- mainDescription
   |  |- TOKEN[type: 4, text: Example with angle brackets: 5 < 10 and 10 > 5. ]
   |  |- htmlElement
   |  |  |- TOKEN[type: 21, text: <]
   |  |  |- TOKEN[type: 26, text: br]
   |  |  '- TOKEN[type: 22, text: >]
   |  |- TOKEN[type: 3, text: \n]
   |  |- TOKEN[type: 4, text: Example with braces: map.get("{key}") returns {value}.]
   |  |- TOKEN[type: 3, text: \n]
   |  |- TOKEN[type: 4, text: Curly braces that aren't tags: This is just {braced text}.]
   |  |- TOKEN[type: 3, text: \n]
   |  |- TOKEN[type: 4, text: Not a tag: { ]
   |  |- TOKEN[type: 4, text: @code not a real tag}.]
   |  |- TOKEN[type: 3, text: \n]
   |  |- TOKEN[type: 4, text: You can write an email like test]
   |  |- TOKEN[type: 4, text: @example.com in plain text.]
   |  |- TOKEN[type: 3, text: \n]
   |  |- TOKEN[type: 4, text: Do not interpret ]
   |  |- TOKEN[type: 4, text: @this or @123 as block tags.]
   |  |- TOKEN[type: 3, text: \n]
   |  |- TOKEN[type: 4, text: Not a leading asterisk: int x = 3 * 5;]
   |  |- TOKEN[type: 3, text: \n]
   |  |- TOKEN[type: 4, text: Not a tag: This is a normal <  p> sentence with no html tags. < /p>. ]
   |  |- htmlElement
   |  |  |- htmlTagStart
   |  |  |  |- TOKEN[type: 21, text: <]
   |  |  |  |- TOKEN[type: 26, text: p]
   |  |  |  '- TOKEN[type: 22, text: >]
   |  |  |- htmlContent
   |  |  |  '- TOKEN[type: 4, text:  this is a real tag ]
   |  |  '- htmlTagEnd
   |  |     |- TOKEN[type: 21, text: <]
   |  |     |- TOKEN[type: 24, text: /]
   |  |     |- TOKEN[type: 26, text: p]
   |  |     '- TOKEN[type: 22, text: >]
   |  '- TOKEN[type: 3, text: \n]
   '- TOKEN[type: -1, text: <EOF>]
