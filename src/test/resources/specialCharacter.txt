'- javadoc
   |- description
   |  |- TOKEN[type: TEXT, text: Example with angle brackets: 5 < 10 and 10 > 5. , line: 1, column: 2]
   |  |- htmlElement
   |  |  |- TOKEN[type: TAG_OPEN, text: <, line: 1, column: 50]
   |  |  |- TOKEN[type: TAG_NAME, text: br, line: 1, column: 51]
   |  |  '- TOKEN[type: TAG_CLOSE, text: >, line: 1, column: 53]
   |  |- TOKEN[type: TEXT, text: Example with braces: map.get("{key}") returns {value}., line: 2, column: 2]
   |  |- TOKEN[type: TEXT, text: Curly braces that aren't tags: This is just {braced text}., line: 3, column: 2]
   |  |- TOKEN[type: TEXT, text: Not a tag: { , line: 4, column: 2]
   |  |- TOKEN[type: TEXT, text: @code not a real tag}., line: 4, column: 15]
   |  |- TOKEN[type: TEXT, text: You can write an email like test, line: 5, column: 2]
   |  |- TOKEN[type: TEXT, text: @example.com in plain text., line: 5, column: 34]
   |  |- TOKEN[type: TEXT, text: Do not interpret , line: 6, column: 2]
   |  |- TOKEN[type: TEXT, text: @this or @123 as block tags., line: 6, column: 19]
   |  |- TOKEN[type: TEXT, text: Not a leading asterisk: int x = 3 * 5;, line: 7, column: 2]
   |  |- TOKEN[type: TEXT, text: Not a tag: This is a normal <  p> sentence with no html tags. < /p>. , line: 8, column: 2]
   |  '- htmlElement
   |     |- htmlTagStart
   |     |  |- TOKEN[type: TAG_OPEN, text: <, line: 8, column: 71]
   |     |  |- TOKEN[type: TAG_NAME, text: p, line: 8, column: 72]
   |     |  '- TOKEN[type: TAG_CLOSE, text: >, line: 8, column: 73]
   |     |- htmlContent
   |     |  '- TOKEN[type: TEXT, text:  this is a real tag , line: 8, column: 74]
   |     '- htmlTagEnd
   |        |- TOKEN[type: TAG_OPEN, text: <, line: 8, column: 94]
   |        |- TOKEN[type: TAG_SLASH, text: /, line: 8, column: 95]
   |        |- TOKEN[type: TAG_NAME, text: p, line: 8, column: 96]
   |        '- TOKEN[type: TAG_CLOSE, text: >, line: 8, column: 97]
   '- TOKEN[type: EOF, text: <EOF>, line: 9, column: 0]
