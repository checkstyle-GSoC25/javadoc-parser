'- javadoc
   |- mainDescription
   |  |- TOKEN[type: TEXT, text: Returns a new ]
   |  |- htmlElement
   |  |  |- htmlTagStart
   |  |  |  |- TOKEN[type: TAG_OPEN, text: <]
   |  |  |  |- TOKEN[type: TAG_NAME, text: code]
   |  |  |  '- TOKEN[type: TAG_CLOSE, text: >]
   |  |  |- htmlContent
   |  |  |  '- TOKEN[type: TEXT, text: List]
   |  |  '- htmlTagEnd
   |  |     |- TOKEN[type: TAG_OPEN, text: <]
   |  |     |- TOKEN[type: TAG_SLASH, text: /]
   |  |     |- TOKEN[type: TAG_NAME, text: code]
   |  |     '- TOKEN[type: TAG_CLOSE, text: >]
   |  |- TOKEN[type: TEXT, text:  containing all elements from the specified]
   |  |- TOKEN[type: NEWLINE, text: \n]
   |  |- htmlElement
   |  |  |- htmlTagStart
   |  |  |  |- TOKEN[type: TAG_OPEN, text: <]
   |  |  |  |- TOKEN[type: TAG_NAME, text: code]
   |  |  |  '- TOKEN[type: TAG_CLOSE, text: >]
   |  |  |- htmlContent
   |  |  |  '- TOKEN[type: TEXT, text: Collection]
   |  |  '- htmlTagEnd
   |  |     |- TOKEN[type: TAG_OPEN, text: <]
   |  |     |- TOKEN[type: TAG_SLASH, text: /]
   |  |     |- TOKEN[type: TAG_NAME, text: code]
   |  |     '- TOKEN[type: TAG_CLOSE, text: >]
   |  |- TOKEN[type: TEXT, text:  in the same iteration order.]
   |  |- TOKEN[type: NEWLINE, text: \n]
   |  |- TOKEN[type: TEXT, text: This method is useful when you want to create a mutable copy of an existing]
   |  |- TOKEN[type: NEWLINE, text: \n]
   |  |- TOKEN[type: TEXT, text: collection. For example:]
   |  |- TOKEN[type: NEWLINE, text: \n]
   |  |- htmlElement
   |  |  |- htmlTagStart
   |  |  |  |- TOKEN[type: TAG_OPEN, text: <]
   |  |  |  |- TOKEN[type: TAG_NAME, text: pre]
   |  |  |  '- TOKEN[type: TAG_CLOSE, text: >]
   |  |  |- htmlContent
   |  |  |  |- TOKEN[type: NEWLINE, text: \n]
   |  |  |  |- inlineTag
   |  |  |  |  |- TOKEN[type: JAVADOC_INLINE_TAG_START, text: {@]
   |  |  |  |  |- codeInlineTag
   |  |  |  |  |  |- TOKEN[type: CODE_LITERAL, text: code]
   |  |  |  |  |  |- TOKEN[type: NEWLINE, text: \n]
   |  |  |  |  |  |- TOKEN[type: TEXT, text:  List<String> names = new ArrayList<>(createNames());]
   |  |  |  |  |  |- TOKEN[type: NEWLINE, text: \n]
   |  |  |  |  |  '- TOKEN[type: TEXT, text:  ]
   |  |  |  |  '- TOKEN[type: JAVADOC_INLINE_TAG_END, text: }]
   |  |  |  '- TOKEN[type: NEWLINE, text: \n]
   |  |  '- htmlTagEnd
   |  |     |- TOKEN[type: TAG_OPEN, text: <]
   |  |     |- TOKEN[type: TAG_SLASH, text: /]
   |  |     |- TOKEN[type: TAG_NAME, text: pre]
   |  |     '- TOKEN[type: TAG_CLOSE, text: >]
   |  |- TOKEN[type: NEWLINE, text: \n]
   |  |- TOKEN[type: TEXT, text: See also:]
   |  |- TOKEN[type: NEWLINE, text: \n]
   |  |- htmlElement
   |  |  |- htmlTagStart
   |  |  |  |- TOKEN[type: TAG_OPEN, text: <]
   |  |  |  |- TOKEN[type: TAG_NAME, text: ul]
   |  |  |  '- TOKEN[type: TAG_CLOSE, text: >]
   |  |  |- htmlContent
   |  |  |  |- TOKEN[type: NEWLINE, text: \n]
   |  |  |  |- htmlElement
   |  |  |  |  |- htmlTagStart
   |  |  |  |  |  |- TOKEN[type: TAG_OPEN, text: <]
   |  |  |  |  |  |- TOKEN[type: TAG_NAME, text: li]
   |  |  |  |  |  '- TOKEN[type: TAG_CLOSE, text: >]
   |  |  |  |  |- htmlContent
   |  |  |  |  |  |- TOKEN[type: JAVADOC_INLINE_TAG_START, text: {@]
   |  |  |  |  |  |- linkInlineTag
   |  |  |  |  |  |  |- TOKEN[type: LINK_LITERAL, text: link]
   |  |  |  |  |  |  '- reference
   |  |  |  |  |  |     |- qualifiedName
   |  |  |  |  |  |     |  |- TOKEN[type: IDENTIFIER, text: java]
   |  |  |  |  |  |     |  |- TOKEN[type: DOT, text: .]
   |  |  |  |  |  |     |  |- TOKEN[type: IDENTIFIER, text: util]
   |  |  |  |  |  |     |  |- TOKEN[type: DOT, text: .]
   |  |  |  |  |  |     |  '- TOKEN[type: IDENTIFIER, text: Collections]
   |  |  |  |  |  |     |- TOKEN[type: HASH, text: #]
   |  |  |  |  |  |     '- memberReference
   |  |  |  |  |  |        |- TOKEN[type: IDENTIFIER, text: unmodifiableList]
   |  |  |  |  |  |        |- TOKEN[type: LPAREN, text: (]
   |  |  |  |  |  |        |- parameterList
   |  |  |  |  |  |        |  '- TOKEN[type: IDENTIFIER, text: List]
   |  |  |  |  |  |        '- TOKEN[type: RPAREN, text: )]
   |  |  |  |  |  '- TOKEN[type: JAVADOC_INLINE_TAG_END, text: }]
   |  |  |  |  '- htmlTagEnd
   |  |  |  |     |- TOKEN[type: TAG_OPEN, text: <]
   |  |  |  |     |- TOKEN[type: TAG_SLASH, text: /]
   |  |  |  |     |- TOKEN[type: TAG_NAME, text: li]
   |  |  |  |     '- TOKEN[type: TAG_CLOSE, text: >]
   |  |  |  |- TOKEN[type: NEWLINE, text: \n]
   |  |  |  |- htmlElement
   |  |  |  |  |- htmlTagStart
   |  |  |  |  |  |- TOKEN[type: TAG_OPEN, text: <]
   |  |  |  |  |  |- TOKEN[type: TAG_NAME, text: li]
   |  |  |  |  |  '- TOKEN[type: TAG_CLOSE, text: >]
   |  |  |  |  |- htmlContent
   |  |  |  |  |  |- TOKEN[type: JAVADOC_INLINE_TAG_START, text: {@]
   |  |  |  |  |  |- linkInlineTag
   |  |  |  |  |  |  |- TOKEN[type: LINK_LITERAL, text: link]
   |  |  |  |  |  |  '- reference
   |  |  |  |  |  |     |- TOKEN[type: IDENTIFIER, text: java]
   |  |  |  |  |  |     |- TOKEN[type: DOT, text: .]
   |  |  |  |  |  |     |- TOKEN[type: IDENTIFIER, text: util]
   |  |  |  |  |  |     |- TOKEN[type: DOT, text: .]
   |  |  |  |  |  |     '- TOKEN[type: IDENTIFIER, text: ArrayList]
   |  |  |  |  |  '- TOKEN[type: JAVADOC_INLINE_TAG_END, text: }]
   |  |  |  |  '- htmlTagEnd
   |  |  |  |     |- TOKEN[type: TAG_OPEN, text: <]
   |  |  |  |     |- TOKEN[type: TAG_SLASH, text: /]
   |  |  |  |     |- TOKEN[type: TAG_NAME, text: li]
   |  |  |  |     '- TOKEN[type: TAG_CLOSE, text: >]
   |  |  |  '- TOKEN[type: NEWLINE, text: \n]
   |  |  '- htmlTagEnd
   |  |     |- TOKEN[type: TAG_OPEN, text: <]
   |  |     |- TOKEN[type: TAG_SLASH, text: /]
   |  |     |- TOKEN[type: TAG_NAME, text: ul]
   |  |     '- TOKEN[type: TAG_CLOSE, text: >]
   |  |- TOKEN[type: NEWLINE, text: \n]
   |  '- TOKEN[type: NEWLINE, text: \n]
   |- blockTag
   |  |- TOKEN[type: PARAM_LITERAL, text: @param]
   |  |- parameterName
   |  |  '- TOKEN[type: IDENTIFIER, text: collection]
   |  '- description
   |     |- TOKEN[type: TEXT, text:  the source collection]
   |     '- TOKEN[type: NEWLINE, text: \n]
   |- blockTag
   |  |- TOKEN[type: RETURN_LITERAL, text: @return]
   |  '- description
   |     '- TOKEN[type: TEXT, text:  a new mutable list containing the elements of the collection]
   '- TOKEN[type: EOF, text: <EOF>]
